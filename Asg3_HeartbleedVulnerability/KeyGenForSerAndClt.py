import gmpy2
from gmpy2 import mpz
import random

# generate prime number for key generation 
def generate_prime(bitcount):
	startval = random.getrandbits(bitcount)
	startval = (1<<255)|startval

	primeval = gmpy2.next_prime(startval)

	while not gmpy2.is_prime(primeval):
		primeval = gmpy2.next_prime(primeval)

	return primeval

# generate key value (e and d)
def generate_key_content(phi):

	e = random.randrange(2,phi,1)

	if e%2==0:
		e=e+1

	while gmpy2.gcd(e,phi)!=1 and e<phi:
		e = e+2

		if e>=phi:
			e = random.randrange(2,phi,1)
			if e%2==0:
				e=e+1

	d = gmpy2.invert(e,phi)

	return e,d

# Generate public and private key for Server
ser_p = 0
ser_q = 0

while ser_p == ser_q:
	ser_p = generate_prime(256)
	ser_q = generate_prime(256)

ser_n = int(ser_p*ser_q)

ser_phi = (ser_p-1)*(ser_q-1)

ser_e,ser_d = generate_key_content(ser_phi)

ser_e = int(ser_e)
ser_d = int(ser_d)

ser_pubkey = (ser_e,ser_n)
ser_prvkey = (ser_d,ser_n)

print('server public key -- ',ser_pubkey)
print('server private key -- ',ser_prvkey)
print('\n')

# Write server key in the server directory

serverDir = open("server_directory.txt","w")
serverDir.write("Server_e : "+str(ser_e)+"\n")
serverDir.write("Server_d : "+str(ser_d)+"\n")
serverDir.write("Server_n : "+str(ser_n))
serverDir.close()



# Generate public and private key for Client
clt_p = 0
clt_q = 0


while clt_p == clt_q:
	clt_p = generate_prime(256)
	clt_q = generate_prime(256)

	if clt_p == ser_p or clt_p == ser_q or clt_q == ser_p or clt_q == ser_q:
		clt_p = 0
		clt_q = 0

clt_n = int(clt_p * clt_q)

clt_phi = (clt_p-1) * (clt_q-1)

clt_e,clt_d = generate_key_content(clt_phi)

clt_e = int(clt_e)
clt_d = int(clt_d)

clt_pubkey = (clt_e,clt_n)
clt_prvkey = (clt_d,clt_n)

print('client public key -- ',clt_pubkey)
print('client private key -- ',clt_prvkey)
print('\n')

# Write client key in the client directory

clientDir = open("client_directory.txt","w")
clientDir.write("client_e : "+str(clt_e)+"\n")
clientDir.write("client_d : "+str(clt_d)+"\n")
clientDir.write("client_n : "+str(clt_n))
clientDir.close()